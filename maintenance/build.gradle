group 'com.mickey305'
version '0.0.1'

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'application'

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

mainClassName = 'com.mickey305.foundation.tools.maintenance.v3.MaintenanceBatch'

def defaultEncoding = 'UTF-8'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:none"
        options.encoding = defaultEncoding
    }

    tasks.withType(Test) {
        systemProperty "file.encoding", defaultEncoding
    }
}

run {
    // gradlew run maintenance:run -Pargs="{PROJECT_ROOT}\foundation\src\main\java"
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    // original module namespace
    vendor {
        java {
            srcDir "src/vendor/java"
        }
        resources {
            srcDir "src/vendor/resources"
        }
    }
    main {
        compileClasspath += vendor.output
        runtimeClasspath += vendor.output
    }
    test {
        compileClasspath += vendor.output
        runtimeClasspath += vendor.output
    }
}

configurations {
    vendorCompile.extendsFrom implementation
}

dependencies {
    //vendorApi project(':foundation')
    implementation project(':foundation')

    // - Maven repository hosting
    //  URL: https://mvnrepository.com/
    testImplementation group: 'junit'                   , name: 'junit'              , version: '4.12'
    implementation     group: 'org.apache.commons'      , name: 'commons-lang3'      , version: '3.8.1'
    implementation     group: 'org.reflections'         , name: 'reflections'        , version: '0.9.11'

    // -- OSS repository
    //  URL: https://github.com/square/javapoet
    implementation     group: 'com.squareup'            , name: 'javapoet'           , version: '1.11.1'
}

task collectDependenciesJar {
    project.copy {
        from project.configurations.runtimeClasspath
        into "${project.buildDir}/dependencies/compile" as Object
    }
}
