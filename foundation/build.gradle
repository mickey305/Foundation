plugins {
    id 'java'
    id "com.github.spotbugs" version "3.0.0"
}

group 'com.mickey305'
//version '0.6.41-beta'
version '0.6.51'

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.github.spotbugs'

def defaultEncoding = 'UTF-8'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:none"
        //options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        //options.compilerArgs << "-Xlint:all"
        options.encoding = defaultEncoding
    }
    tasks.withType(Test) {
        systemProperty "file.encoding", defaultEncoding
    }
    // To generate an HTML report instead of XML
    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

javadoc {
    options.charSet = defaultEncoding
    options.encoding = defaultEncoding
    options.addBooleanOption('html5', true)
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

spotbugs {
//    toolVersion = '3.1.9'
    toolVersion = '4.0.0-RC3'
    ignoreFailures = true
}

publish {
    userOrg = 'mickey305'
    groupId = this.getGroup()
    artifactId = 'foundation'
    publishVersion  = this.getVersion()
    desc = 'The "Foundation" library is part of infrastructure component and personal-library for Java.'
    website = 'https://github.com/mickey305/Foundation'
    licences = ['Apache-2.0']
}

sourceSets {
    // we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
    main {
        java.srcDirs = ['src/main/java']
    }
}

repositories {
    mavenCentral()
    jcenter()
    //mavenLocal()
}

dependencies {
    // - Maven repository hosting
    //  URL: https://mvnrepository.com/
    testImplementation group: 'junit'                   , name: 'junit'               , version: '4.12'
    api                group: 'org.apache.commons'      , name: 'commons-lang3'       , version: '3.8.1'
    api                group: 'org.apache.commons'      , name: 'commons-math3'       , version: '3.6.1'
    api                group: 'org.apache.commons'      , name: 'commons-collections4', version: '4.2'
    api                group: 'org.hibernate'           , name: 'hibernate-validator' , version: '5.4.3.Final'
    api                group: 'org.glassfish'           , name: 'javax.el'            , version: '3.0.1-b10'
    api                group: 'commons-codec'           , name: 'commons-codec'       , version: '1.13'
    api                group: 'com.google.code.findbugs', name: 'jsr305'              , version: '3.0.2'
    //compile     group: 'com.github.spotbugs'     , name: 'spotbugs'            , version: '3.1.9'
    //compileOnly group: 'com.github.spotbugs'     , name: 'spotbugs-annotations', version: '3.1.9'

    def jreVersion = Double.parseDouble(System.getProperty("java.specification.version"))
    if (jreVersion >= 9) {
        //compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.11'
    }

    // - Maven repository hosting
    //  URL: https://search.maven.org/artifact/uk.com.robust-it/cloning/
    // -- OSS repository
    //  URL: https://github.com/kostaskougios/cloning
    implementation     group: 'uk.com.robust-it'        , name: 'cloning'             , version: '1.9.10'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}

task collectDependenciesJar {
    project.copy {
        from project.configurations.compile
        into "${project.buildDir}/dependencies/compile" as Object
    }
}
